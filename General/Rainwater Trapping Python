# Example---
# Input: [0,1,0,2,1,0,1,3,2,1,2,1]
# Output: 6

Basic idea is to travers all pillars and see how much water is stored above the pillar we are traversing currently.
--Water stored will be of height equal to minimum of the highest pillars on each side minus the height of current pillar.




def trap(height):
    nums = height
    n = len(nums)
    if n <= 2: return 0   #if length is less than 3 pillars then no water cant be stored so return 0
    if n == 3: return max(0, min(nums[0], nums[2]) - nums[1])   # if length is 3 then water can only be above middle pillar


    # go through from left
    # Find the highest piller left of the current pillar we are traversing
    # L[i] meaning: the hightest on nums[i]'s left (excluding nums[i])
    L = []
    maxval = 0
    for i in range(n):
        L.append(maxval)
        maxval = max(maxval, nums[i])


    # go thru from right
    # Find the highest piller right of the current pillar we are traversing
    # R[i] meaning: the hightest on nums[i]'s right (excluding nums[i])
    R = []
    maxval = 0
    for i in range(n)[::-1]:
        R.append(maxval)
        maxval = max(maxval, nums[i])
    R = R[::-1]


    # water at bar[i] = the min bar between left/right - bar[i] height
    water = 0
    for i in range(n):
        if i == 0 or i == n-1:
            continue
        water += max(0, min(L[i], R[i]) - nums[i])
    return water

height=list(map(int, input().split()))  #Take input from the user eg:- 0 1 0 2 1 0 1 3 2 1 2 1 (which makes a list called height)
print(trap(height))  #pass height as a parameter to a function named trap
